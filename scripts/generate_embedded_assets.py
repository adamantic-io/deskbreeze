
import re
from pathlib import Path

# prepare a zip with the contents of the app/www directory, and write it to embedded_assets.cpp
# This script is intended to be run after the frontend build

app_path = Path(__file__).parent.parent / "app"
embedded_path = app_path / "embedded_assets.cpp"
www_zip_path = app_path / "www.zip"
www_path = app_path / "www"



zip_files = list(www_path.glob("**/*"))
if not zip_files:
    raise RuntimeError("No files found in app/www directory")

import zipfile

# Create a zip file with the contents of app/www -- recurse subdirectories
with zipfile.ZipFile(www_zip_path, 'w', zipfile.ZIP_DEFLATED) as zipf:
    for file in zip_files:
        print(f"Adding {file} to zip")
        # Skip directories
        if file.is_dir():
            continue
        # Write the file to the zip, preserving the directory structure
        zipf.write(file, file.relative_to(www_path))

# now embed the zip file in embedded_assets.cpp

# Write embedded_assets.cpp
embedded_path.write_text(f'''

/* AUTOGENERATED FILE - (generate_embedded_assets.py) - DO NOT MODIFY */                         
                         
#include "engine/incbin_common.h"
INCBIN(www_zip, "{www_zip_path.relative_to(app_path)}");

/* END OF AUTOGENERATED FILE - (generate_embedded_assets.py) */
''')
